#!/usr/bin/env python3
"""
Script kh·ªüi ƒë·ªông ABCDBET Customer Service Bot
"""

import sys
import signal
from pathlib import Path


def check_environment():
    """Ki·ªÉm tra m√¥i tr∆∞·ªùng"""
    print("üîç Ki·ªÉm tra m√¥i tr∆∞·ªùng...")

    # Ki·ªÉm tra Python version
    if sys.version_info < (3, 8):
        print("‚ùå C·∫ßn Python 3.8 tr·ªü l√™n")
        return False

    # Ki·ªÉm tra file bot.py
    if not Path("bot.py").exists():
        print("‚ùå Kh√¥ng t√¨m th·∫•y bot.py")
        return False

    # Ki·ªÉm tra bot_config.py
    if not Path("bot_config.py").exists():
        print("‚ùå Kh√¥ng t√¨m th·∫•y bot_config.py")
        return False

    print("‚úÖ M√¥i tr∆∞·ªùng OK")
    return True


def check_dependencies():
    """Ki·ªÉm tra dependencies"""
    print("üì¶ Ki·ªÉm tra dependencies...")

    required_modules = [
        'telegram',
        'google.auth',
        'pandas',
        'aiohttp'
    ]

    missing_modules = []
    for module in required_modules:
        try:
            __import__(module)
        except ImportError:
            missing_modules.append(module)

    if missing_modules:
        print(f"‚ùå Thi·∫øu modules: {', '.join(missing_modules)}")
        print("üîß C√†i ƒë·∫∑t b·∫±ng: pip install -r requirements.txt")
        return False

    print("‚úÖ Dependencies OK")
    return True


def signal_handler(signum, frame):
    """X·ª≠ l√Ω signal ƒë·ªÉ d·ª´ng bot gracefully"""
    print(f"\nüõë Nh·∫≠n signal {signum}, ƒëang d·ª´ng bot...")
    sys.exit(0)


def start_bot():
    """Kh·ªüi ƒë·ªông bot"""
    print("üöÄ Kh·ªüi ƒë·ªông ABCDBET Customer Service Bot...")
    print("=" * 50)

    try:
        # Import v√† ch·∫°y bot
        print("‚úÖ Bot ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng!")
        print("üì± G·ª≠i /start tr√™n Telegram ƒë·ªÉ test")
        print("‚èπÔ∏è  Nh·∫•n Ctrl+C ƒë·ªÉ d·ª´ng")

        # Ch·∫°y bot
        import subprocess
        subprocess.run([sys.executable, "bot.py"])

    except ImportError as e:
        print(f"‚ùå L·ªói import: {e}")
        return False
    except Exception as e:
        print(f"‚ùå L·ªói kh·ªüi ƒë·ªông bot: {e}")
        return False

    return True


def main():
    """H√†m ch√≠nh"""
    print("ü§ñ ABCDBET Customer Service Bot Launcher")
    print("=" * 50)

    # Ki·ªÉm tra m√¥i tr∆∞·ªùng
    if not check_environment():
        sys.exit(1)

    # Ki·ªÉm tra dependencies
    if not check_dependencies():
        sys.exit(1)

    # Setup signal handlers
    signal.signal(signal.SIGINT, signal_handler)
    if hasattr(signal, 'SIGTERM'):
        signal.signal(signal.SIGTERM, signal_handler)

    # Kh·ªüi ƒë·ªông bot
    if start_bot():
        print("üéâ Bot ƒëang ch·∫°y! Ki·ªÉm tra Telegram c·ªßa b·∫°n.")
    else:
        print("‚ùå Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông bot")
        sys.exit(1)


if __name__ == "__main__":
    main()
